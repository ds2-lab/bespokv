// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ckv_proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ckv_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protoSpec {

namespace {

const ::google::protobuf::Descriptor* GetMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_Operation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ckv_5fproto_2eproto() {
  protobuf_AddDesc_ckv_5fproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ckv_proto.proto");
  GOOGLE_CHECK(file != NULL);
  GetMessage_descriptor_ = file->message_type(0);
  static const int GetMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessage, key_),
  };
  GetMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMessage_descriptor_,
      GetMessage::default_instance_,
      GetMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessage, _internal_metadata_),
      -1);
  PutMessage_descriptor_ = file->message_type(1);
  static const int PutMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutMessage, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutMessage, value_),
  };
  PutMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutMessage_descriptor_,
      PutMessage::default_instance_,
      PutMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(PutMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutMessage, _internal_metadata_),
      -1);
  DelMessage_descriptor_ = file->message_type(2);
  static const int DelMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelMessage, key_),
  };
  DelMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DelMessage_descriptor_,
      DelMessage::default_instance_,
      DelMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(DelMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelMessage, _internal_metadata_),
      -1);
  Request_descriptor_ = file->message_type(3);
  static const int Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, put_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, del_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Request_Operation_descriptor_ = Request_descriptor_->enum_type(0);
  Reply_descriptor_ = file->message_type(4);
  static const int Reply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, value_),
  };
  Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Reply_descriptor_,
      Reply::default_instance_,
      Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ckv_5fproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMessage_descriptor_, &GetMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutMessage_descriptor_, &PutMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DelMessage_descriptor_, &DelMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Reply_descriptor_, &Reply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ckv_5fproto_2eproto() {
  delete GetMessage::default_instance_;
  delete GetMessage_reflection_;
  delete PutMessage::default_instance_;
  delete PutMessage_reflection_;
  delete DelMessage::default_instance_;
  delete DelMessage_reflection_;
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Reply::default_instance_;
  delete Reply_reflection_;
}

void protobuf_AddDesc_ckv_5fproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ckv_proto.proto\022\tprotoSpec\"\031\n\nGetMessa"
    "ge\022\013\n\003key\030\001 \002(\t\"(\n\nPutMessage\022\013\n\003key\030\001 \002"
    "(\t\022\r\n\005value\030\002 \002(\t\"\031\n\nDelMessage\022\013\n\003key\030\001"
    " \002(\t\"\307\001\n\007Request\022(\n\002op\030\001 \002(\0162\034.protoSpec"
    ".Request.Operation\022\"\n\003get\030\002 \001(\0132\025.protoS"
    "pec.GetMessage\022\"\n\003put\030\003 \001(\0132\025.protoSpec."
    "PutMessage\022\"\n\003del\030\004 \001(\0132\025.protoSpec.DelM"
    "essage\"&\n\tOperation\022\007\n\003GET\020\001\022\007\n\003PUT\020\002\022\007\n"
    "\003DEL\020\003\"&\n\005Reply\022\016\n\006status\030\001 \002(\005\022\r\n\005value"
    "\030\002 \001(\t", 366);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ckv_proto.proto", &protobuf_RegisterTypes);
  GetMessage::default_instance_ = new GetMessage();
  PutMessage::default_instance_ = new PutMessage();
  DelMessage::default_instance_ = new DelMessage();
  Request::default_instance_ = new Request();
  Reply::default_instance_ = new Reply();
  GetMessage::default_instance_->InitAsDefaultInstance();
  PutMessage::default_instance_->InitAsDefaultInstance();
  DelMessage::default_instance_->InitAsDefaultInstance();
  Request::default_instance_->InitAsDefaultInstance();
  Reply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ckv_5fproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ckv_5fproto_2eproto {
  StaticDescriptorInitializer_ckv_5fproto_2eproto() {
    protobuf_AddDesc_ckv_5fproto_2eproto();
  }
} static_descriptor_initializer_ckv_5fproto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessage::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessage::GetMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoSpec.GetMessage)
}

void GetMessage::InitAsDefaultInstance() {
}

GetMessage::GetMessage(const GetMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protoSpec.GetMessage)
}

void GetMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMessage::~GetMessage() {
  // @@protoc_insertion_point(destructor:protoSpec.GetMessage)
  SharedDtor();
}

void GetMessage::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMessage_descriptor_;
}

const GetMessage& GetMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ckv_5fproto_2eproto();
  return *default_instance_;
}

GetMessage* GetMessage::default_instance_ = NULL;

GetMessage* GetMessage::New(::google::protobuf::Arena* arena) const {
  GetMessage* n = new GetMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMessage::Clear() {
  if (has_key()) {
    key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoSpec.GetMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protoSpec.GetMessage.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoSpec.GetMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoSpec.GetMessage)
  return false;
#undef DO_
}

void GetMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoSpec.GetMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.GetMessage.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protoSpec.GetMessage)
}

::google::protobuf::uint8* GetMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoSpec.GetMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.GetMessage.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoSpec.GetMessage)
  return target;
}

int GetMessage::ByteSize() const {
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMessage::MergeFrom(const GetMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessage::CopyFrom(const GetMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetMessage::Swap(GetMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessage::InternalSwap(GetMessage* other) {
  key_.Swap(&other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMessage_descriptor_;
  metadata.reflection = GetMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMessage

// required string key = 1;
bool GetMessage::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetMessage::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void GetMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& GetMessage::key() const {
  // @@protoc_insertion_point(field_get:protoSpec.GetMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protoSpec.GetMessage.key)
}
 void GetMessage::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protoSpec.GetMessage.key)
}
 void GetMessage::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protoSpec.GetMessage.key)
}
 ::std::string* GetMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:protoSpec.GetMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetMessage::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protoSpec.GetMessage.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutMessage::kKeyFieldNumber;
const int PutMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutMessage::PutMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoSpec.PutMessage)
}

void PutMessage::InitAsDefaultInstance() {
}

PutMessage::PutMessage(const PutMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protoSpec.PutMessage)
}

void PutMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PutMessage::~PutMessage() {
  // @@protoc_insertion_point(destructor:protoSpec.PutMessage)
  SharedDtor();
}

void PutMessage::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PutMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutMessage_descriptor_;
}

const PutMessage& PutMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ckv_5fproto_2eproto();
  return *default_instance_;
}

PutMessage* PutMessage::default_instance_ = NULL;

PutMessage* PutMessage::New(::google::protobuf::Arena* arena) const {
  PutMessage* n = new PutMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutMessage::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PutMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoSpec.PutMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protoSpec.PutMessage.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protoSpec.PutMessage.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoSpec.PutMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoSpec.PutMessage)
  return false;
#undef DO_
}

void PutMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoSpec.PutMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.PutMessage.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.PutMessage.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protoSpec.PutMessage)
}

::google::protobuf::uint8* PutMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoSpec.PutMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.PutMessage.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.PutMessage.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoSpec.PutMessage)
  return target;
}

int PutMessage::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int PutMessage::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PutMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PutMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PutMessage::MergeFrom(const PutMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PutMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutMessage::CopyFrom(const PutMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PutMessage::Swap(PutMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutMessage::InternalSwap(PutMessage* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutMessage_descriptor_;
  metadata.reflection = PutMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutMessage

// required string key = 1;
bool PutMessage::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PutMessage::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void PutMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void PutMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& PutMessage::key() const {
  // @@protoc_insertion_point(field_get:protoSpec.PutMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protoSpec.PutMessage.key)
}
 void PutMessage::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protoSpec.PutMessage.key)
}
 void PutMessage::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protoSpec.PutMessage.key)
}
 ::std::string* PutMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:protoSpec.PutMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PutMessage::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protoSpec.PutMessage.key)
}

// required string value = 2;
bool PutMessage::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PutMessage::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void PutMessage::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void PutMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& PutMessage::value() const {
  // @@protoc_insertion_point(field_get:protoSpec.PutMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutMessage::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protoSpec.PutMessage.value)
}
 void PutMessage::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protoSpec.PutMessage.value)
}
 void PutMessage::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protoSpec.PutMessage.value)
}
 ::std::string* PutMessage::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:protoSpec.PutMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PutMessage::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:protoSpec.PutMessage.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelMessage::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelMessage::DelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoSpec.DelMessage)
}

void DelMessage::InitAsDefaultInstance() {
}

DelMessage::DelMessage(const DelMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protoSpec.DelMessage)
}

void DelMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelMessage::~DelMessage() {
  // @@protoc_insertion_point(destructor:protoSpec.DelMessage)
  SharedDtor();
}

void DelMessage::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelMessage_descriptor_;
}

const DelMessage& DelMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ckv_5fproto_2eproto();
  return *default_instance_;
}

DelMessage* DelMessage::default_instance_ = NULL;

DelMessage* DelMessage::New(::google::protobuf::Arena* arena) const {
  DelMessage* n = new DelMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelMessage::Clear() {
  if (has_key()) {
    key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoSpec.DelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protoSpec.DelMessage.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoSpec.DelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoSpec.DelMessage)
  return false;
#undef DO_
}

void DelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoSpec.DelMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.DelMessage.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protoSpec.DelMessage)
}

::google::protobuf::uint8* DelMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoSpec.DelMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.DelMessage.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoSpec.DelMessage)
  return target;
}

int DelMessage::ByteSize() const {
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DelMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DelMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelMessage::MergeFrom(const DelMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DelMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelMessage::CopyFrom(const DelMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DelMessage::Swap(DelMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelMessage::InternalSwap(DelMessage* other) {
  key_.Swap(&other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelMessage_descriptor_;
  metadata.reflection = DelMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelMessage

// required string key = 1;
bool DelMessage::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DelMessage::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void DelMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void DelMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& DelMessage::key() const {
  // @@protoc_insertion_point(field_get:protoSpec.DelMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DelMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protoSpec.DelMessage.key)
}
 void DelMessage::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protoSpec.DelMessage.key)
}
 void DelMessage::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protoSpec.DelMessage.key)
}
 ::std::string* DelMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:protoSpec.DelMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DelMessage::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DelMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:protoSpec.DelMessage.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_Operation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_Operation_descriptor_;
}
bool Request_Operation_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_Operation Request::GET;
const Request_Operation Request::PUT;
const Request_Operation Request::DEL;
const Request_Operation Request::Operation_MIN;
const Request_Operation Request::Operation_MAX;
const int Request::Operation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kOpFieldNumber;
const int Request::kGetFieldNumber;
const int Request::kPutFieldNumber;
const int Request::kDelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoSpec.Request)
}

void Request::InitAsDefaultInstance() {
  get_ = const_cast< ::protoSpec::GetMessage*>(&::protoSpec::GetMessage::default_instance());
  put_ = const_cast< ::protoSpec::PutMessage*>(&::protoSpec::PutMessage::default_instance());
  del_ = const_cast< ::protoSpec::DelMessage*>(&::protoSpec::DelMessage::default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protoSpec.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  op_ = 1;
  get_ = NULL;
  put_ = NULL;
  del_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:protoSpec.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
    delete get_;
    delete put_;
    delete del_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ckv_5fproto_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    op_ = 1;
    if (has_get()) {
      if (get_ != NULL) get_->::protoSpec::GetMessage::Clear();
    }
    if (has_put()) {
      if (put_ != NULL) put_->::protoSpec::PutMessage::Clear();
    }
    if (has_del()) {
      if (del_ != NULL) del_->::protoSpec::DelMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoSpec.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protoSpec.Request.Operation op = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protoSpec::Request_Operation_IsValid(value)) {
            set_op(static_cast< ::protoSpec::Request_Operation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_get;
        break;
      }

      // optional .protoSpec.GetMessage get = 2;
      case 2: {
        if (tag == 18) {
         parse_get:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_put;
        break;
      }

      // optional .protoSpec.PutMessage put = 3;
      case 3: {
        if (tag == 26) {
         parse_put:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_del;
        break;
      }

      // optional .protoSpec.DelMessage del = 4;
      case 4: {
        if (tag == 34) {
         parse_del:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoSpec.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoSpec.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoSpec.Request)
  // required .protoSpec.Request.Operation op = 1;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // optional .protoSpec.GetMessage get = 2;
  if (has_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->get_, output);
  }

  // optional .protoSpec.PutMessage put = 3;
  if (has_put()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->put_, output);
  }

  // optional .protoSpec.DelMessage del = 4;
  if (has_del()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->del_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protoSpec.Request)
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoSpec.Request)
  // required .protoSpec.Request.Operation op = 1;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // optional .protoSpec.GetMessage get = 2;
  if (has_get()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->get_, target);
  }

  // optional .protoSpec.PutMessage put = 3;
  if (has_put()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->put_, target);
  }

  // optional .protoSpec.DelMessage del = 4;
  if (has_del()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->del_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoSpec.Request)
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  // required .protoSpec.Request.Operation op = 1;
  if (has_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional .protoSpec.GetMessage get = 2;
    if (has_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_);
    }

    // optional .protoSpec.PutMessage put = 3;
    if (has_put()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->put_);
    }

    // optional .protoSpec.DelMessage del = 4;
    if (has_del()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->del_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_get()) {
      mutable_get()->::protoSpec::GetMessage::MergeFrom(from.get());
    }
    if (from.has_put()) {
      mutable_put()->::protoSpec::PutMessage::MergeFrom(from.put());
    }
    if (from.has_del()) {
      mutable_del()->::protoSpec::DelMessage::MergeFrom(from.del());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_get()) {
    if (!this->get_->IsInitialized()) return false;
  }
  if (has_put()) {
    if (!this->put_->IsInitialized()) return false;
  }
  if (has_del()) {
    if (!this->del_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(op_, other->op_);
  std::swap(get_, other->get_);
  std::swap(put_, other->put_);
  std::swap(del_, other->del_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// required .protoSpec.Request.Operation op = 1;
bool Request::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_op() {
  op_ = 1;
  clear_has_op();
}
 ::protoSpec::Request_Operation Request::op() const {
  // @@protoc_insertion_point(field_get:protoSpec.Request.op)
  return static_cast< ::protoSpec::Request_Operation >(op_);
}
 void Request::set_op(::protoSpec::Request_Operation value) {
  assert(::protoSpec::Request_Operation_IsValid(value));
  set_has_op();
  op_ = value;
  // @@protoc_insertion_point(field_set:protoSpec.Request.op)
}

// optional .protoSpec.GetMessage get = 2;
bool Request::has_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_get() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_get() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_get() {
  if (get_ != NULL) get_->::protoSpec::GetMessage::Clear();
  clear_has_get();
}
const ::protoSpec::GetMessage& Request::get() const {
  // @@protoc_insertion_point(field_get:protoSpec.Request.get)
  return get_ != NULL ? *get_ : *default_instance_->get_;
}
::protoSpec::GetMessage* Request::mutable_get() {
  set_has_get();
  if (get_ == NULL) {
    get_ = new ::protoSpec::GetMessage;
  }
  // @@protoc_insertion_point(field_mutable:protoSpec.Request.get)
  return get_;
}
::protoSpec::GetMessage* Request::release_get() {
  clear_has_get();
  ::protoSpec::GetMessage* temp = get_;
  get_ = NULL;
  return temp;
}
void Request::set_allocated_get(::protoSpec::GetMessage* get) {
  delete get_;
  get_ = get;
  if (get) {
    set_has_get();
  } else {
    clear_has_get();
  }
  // @@protoc_insertion_point(field_set_allocated:protoSpec.Request.get)
}

// optional .protoSpec.PutMessage put = 3;
bool Request::has_put() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_put() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_put() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_put() {
  if (put_ != NULL) put_->::protoSpec::PutMessage::Clear();
  clear_has_put();
}
const ::protoSpec::PutMessage& Request::put() const {
  // @@protoc_insertion_point(field_get:protoSpec.Request.put)
  return put_ != NULL ? *put_ : *default_instance_->put_;
}
::protoSpec::PutMessage* Request::mutable_put() {
  set_has_put();
  if (put_ == NULL) {
    put_ = new ::protoSpec::PutMessage;
  }
  // @@protoc_insertion_point(field_mutable:protoSpec.Request.put)
  return put_;
}
::protoSpec::PutMessage* Request::release_put() {
  clear_has_put();
  ::protoSpec::PutMessage* temp = put_;
  put_ = NULL;
  return temp;
}
void Request::set_allocated_put(::protoSpec::PutMessage* put) {
  delete put_;
  put_ = put;
  if (put) {
    set_has_put();
  } else {
    clear_has_put();
  }
  // @@protoc_insertion_point(field_set_allocated:protoSpec.Request.put)
}

// optional .protoSpec.DelMessage del = 4;
bool Request::has_del() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_del() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_del() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_del() {
  if (del_ != NULL) del_->::protoSpec::DelMessage::Clear();
  clear_has_del();
}
const ::protoSpec::DelMessage& Request::del() const {
  // @@protoc_insertion_point(field_get:protoSpec.Request.del)
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
::protoSpec::DelMessage* Request::mutable_del() {
  set_has_del();
  if (del_ == NULL) {
    del_ = new ::protoSpec::DelMessage;
  }
  // @@protoc_insertion_point(field_mutable:protoSpec.Request.del)
  return del_;
}
::protoSpec::DelMessage* Request::release_del() {
  clear_has_del();
  ::protoSpec::DelMessage* temp = del_;
  del_ = NULL;
  return temp;
}
void Request::set_allocated_del(::protoSpec::DelMessage* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
  // @@protoc_insertion_point(field_set_allocated:protoSpec.Request.del)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kStatusFieldNumber;
const int Reply::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protoSpec.Reply)
}

void Reply::InitAsDefaultInstance() {
}

Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protoSpec.Reply)
}

void Reply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:protoSpec.Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_descriptor_;
}

const Reply& Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ckv_5fproto_2eproto();
  return *default_instance_;
}

Reply* Reply::default_instance_ = NULL;

Reply* Reply::New(::google::protobuf::Arena* arena) const {
  Reply* n = new Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reply::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    status_ = 0;
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protoSpec.Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protoSpec.Reply.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protoSpec.Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protoSpec.Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protoSpec.Reply)
  // required int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.Reply.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protoSpec.Reply)
}

::google::protobuf::uint8* Reply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoSpec.Reply)
  // required int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protoSpec.Reply.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoSpec.Reply)
  return target;
}

int Reply::ByteSize() const {
  int total_size = 0;

  // required int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }
  // optional string value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Reply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  std::swap(status_, other->status_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reply_descriptor_;
  metadata.reflection = Reply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reply

// required int32 status = 1;
bool Reply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Reply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void Reply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void Reply::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::google::protobuf::int32 Reply::status() const {
  // @@protoc_insertion_point(field_get:protoSpec.Reply.status)
  return status_;
}
 void Reply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:protoSpec.Reply.status)
}

// optional string value = 2;
bool Reply::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Reply::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Reply::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Reply::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& Reply::value() const {
  // @@protoc_insertion_point(field_get:protoSpec.Reply.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Reply::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protoSpec.Reply.value)
}
 void Reply::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protoSpec.Reply.value)
}
 void Reply::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protoSpec.Reply.value)
}
 ::std::string* Reply::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:protoSpec.Reply.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Reply::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Reply::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:protoSpec.Reply.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protoSpec

// @@protoc_insertion_point(global_scope)
